log4j.rootLogger=INFO, A,D

#控制台
log4j.appender.A=org.apache.log4j.ConsoleAppender
log4j.appender.A.encoding=utf8
log4j.appender.A.layout=org.apache.log4j.PatternLayout
log4j.appender.A.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n

#普通文件
log4j.appender.B=org.apache.log4j.FileAppender
log4j.appender.B.File=C:\\test_system\\log\\log.log
log4j.appender.B.encoding=utf8
log4j.appender.B.layout=org.apache.log4j.SimpleLayout

#分区文件
log4j.appender.C=org.apache.log4j.RollingFileAppender
log4j.appender.C.File=C:\\test_system\\log\\log.html
log4j.appender.C.MaxFileSize=1000KB
log4j.appender.C.MaxBackupIndex=10
log4j.appender.C.layout=org.apache.log4j.HTMLLayout
log4j.appender.C.encoding=gbk

#一天一个文件 ERROR以上
log4j.appender.D=org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.Threshold = ERROR
log4j.appender.D.encoding=utf8
log4j.appender.D.Append = true
log4j.appender.D.File=C:\\test_system\\log\\log.log
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} -[%p] %m%n

#org.apache.log4j.ConsoleAppender（控制台），
#org.apache.log4j.FileAppender（文件），
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）

#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#%r 输出自应用启动到输出该log信息耗费的毫秒数
#%c 输出所属的类目，通常就是所在类的全名
#%t 输出产生该日志事件的线程名
#%n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)
#%m 信息
